# @package _global_

core:
  url_data: "https://www.dropbox.com/scl/fo/8ixpy27i67s04bp7uixoq/h?rlkey=0ye7rd4zkcqfhvzx7suunw3bk&dl=0"

defaults:
  - override /inputs: 
     - load_ncdf
  - override /processes: 
     - iceflow

# hydra:
#   # output_subdir: my_result_${core.gpu_id} # name the result based on the GPU ID
#   # output_subdir: my_result_particles_${processes.particles.part_frequency_seeding} # name the result based on a parameter with multirun
#   job:
#     chdir: True

inputs:
  load_ncdf:
    lncd_input_file: data/input.nc

processes:
  iceflow:
    iceflow:
      run_data_assimilation: True
      init_slidingco: 0.045
      init_arrhenius: 78
    optimize:
      control: 
        - thk
        - usurf
        - slidingco
      cost: 
        - velsurf
        - icemask
        - usurf
        - thk
        - divfluxfcz
      force_zero_sum_divflux: true
      divflux_method: centered
      usurfobs_std: 0.3
      velsurfobs_std: 0.25
      thkobs_std: 1
      divfluxobs_std: 0.1
      regu_param_thk: 1
      regu_param_slidingco: 1.0e6
      smooth_anisotropy_factor: 0.2
      convexity_weight: 500
      nbitmax: 500
      vars_to_save: 
        - usurf
        - thk
        - slidingco
        - velsurf_mag
        - velsurfobs_mag
        - velbase_mag
        - sliding_ratio
        - divflux
        - icemask
        - arrhenius
        - thkobs
